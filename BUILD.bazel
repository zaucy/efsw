load("@rules_cc//cc:defs.bzl", "cc_library")

cc_library(
    name = "efsw",
    visibility = ["//visibility:public"],
    strip_include_prefix = "include",
    includes = ["include", "src"],
    hdrs = glob(["include/**/*.hpp", "include/**/*.h"]),
    copts = select({
        "@bazel_tools//tools/cpp:msvc": ["/std:c++20"],
        "//conditions:default": ["-std=c++20"],
    }),
    srcs = [
        "src/efsw/DirectorySnapshot.cpp",
        "src/efsw/DirectorySnapshotDiff.cpp",
        "src/efsw/DirWatcherGeneric.cpp",
        "src/efsw/FileInfo.cpp",
        "src/efsw/FileSystem.cpp",
        "src/efsw/FileWatcher.cpp",
        "src/efsw/FileWatcherCWrapper.cpp",
        "src/efsw/FileWatcherGeneric.cpp",
        "src/efsw/FileWatcherImpl.cpp",
        "src/efsw/Log.cpp",
        "src/efsw/Mutex.cpp",
        "src/efsw/String.cpp",
        "src/efsw/System.cpp",
        "src/efsw/Thread.cpp",
        "src/efsw/Watcher.cpp",
        "src/efsw/WatcherGeneric.cpp",
    ] + select({
        "@platforms//os:windows": [
            "src/efsw/FileWatcherWin32.cpp",
            "src/efsw/WatcherWin32.cpp",
            "src/efsw/platform/win/FileSystemImpl.cpp",
            "src/efsw/platform/win/MutexImpl.cpp",
            "src/efsw/platform/win/SystemImpl.cpp",
            "src/efsw/platform/win/ThreadImpl.cpp",
        ],
    }),
)
